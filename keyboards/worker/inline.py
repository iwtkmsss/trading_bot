from math import ceil

from aiogram.utils.keyboard import InlineKeyboardButton, InlineKeyboardMarkup, \
    InlineKeyboardBuilder

from third_bot.keyboards import PaginatorMammoths

main_worker_kb = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text="–ú–æ–∏ –º–∞–º–æ–Ω—Ç—ã", callback_data="my_mammoths"),
            InlineKeyboardButton(text="–ì–∞–π–¥ –Ω–∞ –±–æ—Ç–∞", callback_data="guide_bot")
        ],
        [
            InlineKeyboardButton(text="–†–µ—Ñ. —Å—Å—ã–ª–∫–∞", callback_data="ref_id"),
            InlineKeyboardButton(text="–†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –≤—ã–≤–æ–¥–∞", callback_data="rek_withdraw")
        ],
        [
            InlineKeyboardButton(text="–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç –≤ –±–æ—Ç–µ", callback_data="currency_rates")
        ]
    ]
)


def mammoth_control_kb(stop_lim, bet_status, verification):
    kb = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text="üí∞ –ò–∑–º–µ–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å", callback_data="edit_balance"),
                InlineKeyboardButton(text="‚òòÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Ñ–∞—Ä—Ç", callback_data="edit_luck")
            ],
            [
                InlineKeyboardButton(text="ü§ë –ò–∑–º–µ–Ω–∏—Ç—å –º–∏–Ω. –¥–µ–ø–æ–∑–∏—Ç", callback_data="edit_min_dep")
            ],
            [
                InlineKeyboardButton(text="üí∏ –ò–∑–º–µ–Ω–∏—Ç—å –º–µ—Ç–æ–¥ –≤—ã–≤–æ–¥–∞", callback_data="edit_method_withdraw")
            ],
            [
                InlineKeyboardButton(text="‚≠ïÔ∏è –í–∫–ª./–í—ã–∫–ª. —Å—Ç–æ–ø-–ª–∏–º–∏—Ç " + ("‚úÖ" if stop_lim else "‚ùå"),
                                     callback_data="on_off_stop_lim")
            ],
            [
                InlineKeyboardButton(text="‚≠ïÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Å—É–º–º—É —Å—Ç–æ–ø-–ª–∏–º–∏—Ç–∞", callback_data="edit_sym_stop_lim")
            ],
            [
                InlineKeyboardButton(text="üìä –í–∫–ª./–í—ã–∫–ª. —Å—Ç–∞–≤–∫–∏ " + ("‚úÖ" if bet_status else "‚ùå"),
                                     callback_data="on_off_bet")
            ],
            [
                InlineKeyboardButton(text="ü™™ –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è " + ("‚úÖ" if verification else "‚ùå"),
                                     callback_data="on_off_verification")
            ],
            [
                InlineKeyboardButton(text="üí¨ –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è", callback_data="send_message")
            ],
            [
                InlineKeyboardButton(text="–ó–∞–∫—Ä—ã—Ç—å", callback_data="close_info_menu")
            ]
        ]
    )
    return kb


cancel_action = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∏—Ç—å", callback_data="close_action")
        ]
    ]
)

back_to_main_menu = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back_to_main_menu")
        ]
    ]
)


async def paginator_mammoths(all_data, page: int = 0):
    kb = InlineKeyboardBuilder()
    for data in all_data:
        kb.row(InlineKeyboardButton(text=f"{data[1]}",
                                    callback_data=f"mammoths_{data[0]}"), width=1)
    kb.row(
        InlineKeyboardButton(text="‚¨Ö", callback_data=PaginatorMammoths(action="prev", page=page).pack()),
        InlineKeyboardButton(text=f"{page} - {ceil(len(all_data) / 5) - 1}",
                             callback_data=PaginatorMammoths(action="next", page=page).pack()),
        InlineKeyboardButton(text="‚û°", callback_data=PaginatorMammoths(action="next", page=page).pack()),
        width=3
    )
    kb.row(InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="back_to_main_menu"))
    return kb.as_markup()


def control_kb(mammoth_id):
    kb = InlineKeyboardMarkup(
        inline_keyboard=[
            [
               InlineKeyboardButton(text="‚öôÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∞–º–æ–Ω—Ç–æ–º", callback_data=f"mc_{mammoth_id}")
            ]
        ]
    )
    return kb
