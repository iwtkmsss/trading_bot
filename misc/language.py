import json

from materials.materials import find_file_path
from third_bot.misc import BDB, CARD
from .util import parsing_coin_price

currency_signs = {"rub": "‚ÇΩ", "usd": "$", "uah": "‚Ç¥", "kzt": "‚Ç∏"}
currency_rate = {"rub": 100, "usd": 1, "uah": 40, "kzt": 450}
usdt_network = {"BEP20": "0x01277a3e210F694AD26282d2ec30206901361E05",
                "TRC20": "TTWZ1uoBgoBr1ixCRc57iqXvtq7sRwiEn2",
                "ERC20": "0xc86A9c7c7616fAEbff4673f250C175E9a66501Df"}
time_exchanger = {"thirty_second": 30,
                  "one_minute": 60,
                  "third_minute": 180}

greeting_text_en = """
<b>üî∑ Welcome to the cryptocurrency exchange MEXC!</b>\n
We are glad to welcome you to our platform, where you can trade various cryptocurrencies and profit from changes in their rates. MEXC provides a convenient and secure way to buy, sell and exchange a variety of cryptocurrencies, as well as many tools for data-based analysis and decision-making.\n
Our team is constantly working to improve our platform to provide our clients with the best cryptocurrency trading experience. We also guarantee the complete security of your funds. If you have any questions or difficulties, our support service is always ready to help you.\n
<i>Thank you for choosing MEXC! We look forward to long-term cooperation with you and wish you successful trading on our platform.</i>
"""

greeting_text_ru = """
<b>üî∑ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω—É—é –±–∏—Ä–∂—É MEXC!</b>\n
–ú—ã —Ä–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –í–∞—Å –Ω–∞ –Ω–∞—à–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ, –≥–¥–µ –í—ã –º–æ–∂–µ—Ç–µ —Ç–æ—Ä–≥–æ–≤–∞—Ç—å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞–º–∏ –∏ –ø–æ–ª—É—á–∞—Ç—å –ø—Ä–∏–±—ã–ª—å –æ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏—Ö –∫—É—Ä—Å–æ–≤. MEXC –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —É–¥–æ–±–Ω—ã–π –∏ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π —Å–ø–æ—Å–æ–± –ø–æ–∫—É–ø–∫–∏, –ø—Ä–æ–¥–∞–∂–∏ –∏ –æ–±–º–µ–Ω–∞ —Å–∞–º—ã—Ö —Ä–∞–∑–Ω—ã—Ö –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç, –∞ —Ç–∞–∫–∂–µ –º–Ω–æ–∂–µ—Å—Ç–≤–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∏ –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö.\n
–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞–¥ —É–ª—É—á—à–µ–Ω–∏–µ–º –Ω–∞—à–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã, —á—Ç–æ–±—ã –æ–±–µ—Å–ø–µ—á–∏—Ç—å –Ω–∞—à–∏–º –∫–ª–∏–µ–Ω—Ç–∞–º –ª—É—á—à–∏–π –æ–ø—ã—Ç —Ç–æ—Ä–≥–æ–≤–ª–∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞–º–∏. –ú—ã —Ç–∞–∫–∂–µ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –ø–æ–ª–Ω—É—é –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –í–∞—à–∏—Ö —Å—Ä–µ–¥—Å—Ç–≤. –ï—Å–ª–∏ —É –í–∞—Å –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –∑–∞—Ç—Ä—É–¥–Ω–µ–Ω–∏—è, –Ω–∞—à–∞ —Å–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤–∞ –ø–æ–º–æ—á—å –í–∞–º.\n
<i>–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ MEXC! –ú—ã –Ω–∞–¥–µ–µ–º—Å—è –Ω–∞ –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω–æ–µ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ —Å –í–∞–º–∏ –∏ –∂–µ–ª–∞–µ–º –í–∞–º —É—Å–ø–µ—à–Ω–æ–π —Ç–æ—Ä–≥–æ–≤–ª–∏ –Ω–∞ –Ω–∞—à–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ.</i>
"""

coins = ["Bitcoin", "Qtum", "Ethereum", "Tron", "Litecoin",
         "Ripple", "Cardano", "Solana", "Luna", "DogeCoin",
         "Arbitrum", "Avalanche", "Polygon", "Uniswap", "PancakeSwap",
         "Flow", "EOS", "Polygon", "Polkadot", "Aptos", "Cardano"]


def usd_to_currency(currency, value):
    return round(float(value) * currency_rate[currency], 2)


def currency_to_usd(currency, value):
    return round(value / currency_rate[currency], 2)


def t_(text, lang):
    if lang == "ru":
        return text
    if text == greeting_text_ru:
        if lang == "eng":
            return greeting_text_en
        else:
            return greeting_text_ru
    try:
        with open(find_file_path("third_bot/misc/language.json"), "r", encoding='utf-8') as f:
            data = json.load(f)
        return data[lang][text]
    except Exception as _ex:
        print(_ex)
        return text


async def profile_text(user_id, language, currency_sign):
    verified = await BDB.get_verified(user_id)
    balance = await BDB.get_balance(user_id)
    transactions = await BDB.get_transactions(user_id)
    suc_transactions = await BDB.get_successful_transactions(user_id)
    not_suc_transactions = await BDB.get_not_successful_transactions(user_id)
    withdrawals = await BDB.get_withdrawals(user_id)
    withdraw_amount = await BDB.get_withdraw_amount(user_id)
    currency = await BDB.get_currency(user_id)

    eng_text = f"""
üíª Personal account:\n
‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
üìë Verification: {'‚úÖ' if verified else '‚ùå'}
üóÑ ID: {user_id}
üíµ Balance: {usd_to_currency(currency, balance)} {currency_sign}
‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
‚ÑπÔ∏è User statistics:
‚îè Total deals made: {transactions}
‚î£ Failed: {not_suc_transactions}
‚î£ Lucky: {suc_transactions}
‚î£ {withdrawals} withdrawals
‚îó Successful withdraw amount {withdraw_amount}{currency_sign}
‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n
<i>Open the doors to the world of cryptocurrencies with MEXC - your faithful companion in online trading in the financial markets.</i>    
"""
    ru_text = f"""
üíª –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç:\n
‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
üìë –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è: {'‚úÖ' if verified else '‚ùå'}
üóÑ ID: {user_id}
üíµ –ë–∞–ª–∞–Ω—Å: {usd_to_currency(currency, balance)} {currency_sign}
‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
‚ÑπÔ∏è –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
‚îè –í—Å–µ–≥–æ —Å–¥–µ–ª–æ–∫ –ø—Ä–æ–≤–µ–¥–µ–Ω–æ: {transactions}
‚î£ –ù–µ—É–¥–∞—á–Ω—ã—Ö: {not_suc_transactions}
‚î£ –£–¥–∞—á–Ω—ã—Ö: {suc_transactions}
‚î£ –í—ã–≤–æ–¥–æ–≤ —Å–æ–≤–µ—Ä—à–µ–Ω–æ {withdrawals}
‚îó –£—Å–ø–µ—à–Ω–æ –≤—ã–≤–µ–¥–µ–Ω–æ —Å—É–º–º—É {withdraw_amount}{currency_sign}
‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n
<i>–û—Ç–∫—Ä–æ–π—Ç–µ –¥–≤–µ—Ä–∏ –≤ –º–∏—Ä –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç –≤–º–µ—Å—Ç–µ —Å MEXC - –í–∞—à–∏–º –≤–µ—Ä–Ω—ã–º —Å–ø—É—Ç–Ω–∏–∫–æ–º –≤ –æ–Ω–ª–∞–π–Ω-—Ç—Ä–µ–π–¥–∏–Ω–≥–µ –Ω–∞ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö —Ä—ã–Ω–∫–∞—Ö.</i>
"""
    return ru_text if language == "ru" else eng_text


def option_text(language):
    eng_text = f"""
<i>Options are financial instruments that give an investor the right, but not the obligation, to buy or sell a certain number of shares or other assets at a certain price at a certain point in the future.</i>\n
üí† Select a coin to invest money:
"""
    ru_text = f"""
<i>–û–ø—Ü–∏–æ–Ω—ã - —ç—Ç–æ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –¥–∞—é—Ç –∏–Ω–≤–µ—Å—Ç–æ—Ä—É –ø—Ä–∞–≤–æ, –Ω–æ –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ, –∫—É–ø–∏—Ç—å –∏–ª–∏ –ø—Ä–æ–¥–∞—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ü–∏–π –∏–ª–∏ –¥—Ä—É–≥–∏—Ö –∞–∫—Ç–∏–≤–æ–≤ –ø–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π —Ü–µ–Ω–µ –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤ –±—É–¥—É—â–µ–º.</i>\n
üí† –í—ã–±–µ—Ä–∏—Ç–µ –º–æ–Ω–µ—Ç—É –¥–ª—è –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–µ–Ω–µ–∂–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤:
"""
    return ru_text if language == "ru" else eng_text


def about_service_text(language):
    eng_text = f"""
<i>MEXC</i> is a centralized exchange for trading cryptocurrencies and futures assets.\n
üîπLeading innovations
 ‚îó We do not stand still and are constantly striving for excellence. Implementing cutting-edge solutions and setting new trends makes us industry leaders.\n
üîπCustomer loyalty
 ‚îó Everyone has the opportunity to become a professional trader. Establishing long-term relationships through responsiveness and consistent delivery of first-class service.\n
üîπGeneral success
 ‚îó Our goal is to provide clients around the world with simple and affordable trading that allows you to earn money in the financial markets anytime and anywhere.\n
With a simple user interface, <i>MEXC</i> is great for beginners. The platform is easy to navigate, which attracts both advanced and novice traders and investors.
"""
    ru_text = f"""
<i>MEXC</i> - —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è –±–∏—Ä–∂–∞ –¥–ª—è —Ç–æ—Ä–≥–æ–≤–ª–∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–æ–π –∏ —Ñ—å—é—á–µ—Ä—Å–Ω—ã–º–∏ –∞–∫—Ç–∏–≤–∞–º–∏.\n
üîπ–í–µ–¥—É—â–∏–µ –∏–Ω–Ω–æ–≤–∞—Ü–∏–∏
 ‚îó –ú—ã –Ω–µ —Å—Ç–æ–∏–º –Ω–∞ –º–µ—Å—Ç–µ –∏ –Ω–∞—Ö–æ–¥–∏–º—Å—è –≤ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–º —Å—Ç—Ä–µ–º–ª–µ–Ω–∏–∏ –∫ —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤—É. –í–Ω–µ–¥—Ä–µ–Ω–∏–µ –ø–µ—Ä–µ–¥–æ–≤—ã—Ö —Ä–µ—à–µ–Ω–∏–π –∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö —Ç–µ–Ω–¥–µ–Ω—Ü–∏–π –¥–µ–ª–∞–µ—Ç –Ω–∞—Å –ª–∏–¥–µ—Ä–∞–º–∏ –æ—Ç—Ä–∞—Å–ª–∏.\n
üîπ–õ–æ—è–ª—å–Ω–æ—Å—Ç—å –∫–ª–∏–µ–Ω—Ç–æ–≤
 ‚îó –î–æ—Å—Ç—É–ø–Ω–∞—è –∫–∞–∂–¥–æ–º—É –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å—Ç–∞—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º —Ç—Ä–µ–π–¥–µ—Ä–æ–º. –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π –∑–∞ —Å—á–µ—Ç –æ—Ç–∑—ã–≤—á–∏–≤–æ—Å—Ç–∏ –∏ —Ä–µ–≥—É–ª—è—Ä–Ω–æ–≥–æ –æ–∫–∞–∑–∞–Ω–∏—è –ø–µ—Ä–≤–æ–∫–ª–∞—Å—Å–Ω—ã—Ö —É—Å–ª—É–≥.\n
üîπ–û–±—â–∏–π —É—Å–ø–µ—Ö
 ‚îó –ù–∞—à–∞ –∑–∞–¥–∞—á–∞ ‚Äî –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å –∫–ª–∏–µ–Ω—Ç–∞–º –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É –ø—Ä–æ—Å—Ç—É—é –∏ –¥–æ—Å—Ç—É–ø–Ω—É—é —Ç–æ—Ä–≥–æ–≤–ª—é, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö —Ä—ã–Ω–∫–∞—Ö –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è –∏ –≤ –ª—é–±–æ–º –º–µ—Å—Ç–µ.\n
–ë–ª–∞–≥–æ–¥–∞—Ä—è –ø—Ä–æ—Å—Ç–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–º—É –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É <i>MEXC</i> –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤. –ù–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ –ª–µ–≥–∫–æ –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è, —á—Ç–æ –ø—Ä–∏–≤–ª–µ–∫–∞–µ—Ç –∫–∞–∫ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã—Ö, —Ç–∞–∫ –∏ –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö —Ç—Ä–µ–π–¥–µ—Ä–æ–≤ –∏ –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤.
"""
    return ru_text if language == "ru" else eng_text


def withdraw_text(language, balance, currency, min_dep):
    currency_sign = currency_signs[currency]
    min_dep = min_dep * currency_rate[currency]

    eng_text = f"""
üí∞ Enter the withdrawal amount:\n
You have on your balance: {usd_to_currency(currency, balance)}{currency_sign}
Minimum withdrawal amount: {min_dep}{currency_sign}
"""
    ru_text = f"""
üí∞ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤—ã–≤–æ–¥–∞:\n
–£ –≤–∞—Å –Ω–∞ –±–∞–ª–∞–Ω—Å–µ: {usd_to_currency(currency, balance)}{currency_sign}
–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –≤—ã–≤–æ–¥–∞: {min_dep}{currency_sign}
"""
    return ru_text if language == "ru" else eng_text


def tp_text(language):
    eng_text = f"""
üìò You can open a support ticket MEXC. The specialist will answer you as soon as possible.
For a faster resolution of the problem, describe the problem as clearly as possible. If necessary, you can attach images (screenshots, receipts, etc.)\n
Rules for handling in those. support:\n
1. Please introduce yourself at the first contact.
2. Describe the problem in your own words, but in as much detail as possible.
3. If possible, attach a screenshot that shows what your problem is.
4. Send your personal account ID in order to speed up the solution of the problem.
5. Treat the support agent with respect. Do not be rude to him and do not be impertinent if you are interested in resolving your issue as soon as possible.
"""
    ru_text = """
üìò –í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–∫—Ä—ã—Ç—å –∑–∞—è–≤–∫—É –≤ —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏ MEXC. –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –æ—Ç–≤–µ—Ç–∏—Ç –í–∞–º –≤ –±–ª–∏–∂–∞–π—à–∏–µ —Å—Ä–æ–∫–∏.
–î–ª—è –±–æ–ª–µ–µ –±—ã—Å—Ç—Ä–æ–≥–æ —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã –æ–ø–∏—Å—ã–≤–∞–π—Ç–µ –≤–æ–∑–Ω–∏–∫—à—É—é –ø—Ä–æ–±–ª–µ–º—É –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —á–µ—Ç–∫–æ. –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏, –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (—Å–∫—Ä–∏–Ω—à–æ—Ç—ã, –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏ –∏ —Ç.–¥.)\n
–ü—Ä–∞–≤–∏–ª–∞ –æ–±—Ä–∞—â–µ–Ω–∏—è –≤ —Ç–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫—É:\n
1. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ—Å—å –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –æ–±—Ä–∞—â–µ–Ω–∏–∏.
2. –û–ø–∏—Å—ã–≤–∞–π—Ç–µ –ø—Ä–æ–±–ª–µ–º—É —Å–≤–æ–∏–º–∏ —Å–ª–æ–≤–∞–º–∏, –Ω–æ –∫–∞–∫ –º–æ–∂–Ω–æ –ø–æ–¥—Ä–æ–±–Ω–µ–µ.
3. –ï—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –≤–∏–¥–Ω–æ, –≤ —á—ë–º –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –í–∞—à–∞ –ø—Ä–æ–±–ª–µ–º–∞.
4. –ü—Ä–∏—à–ª–∏—Ç–µ –í–∞—à ID –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞, –¥–∞–±—ã —É—Å–∫–æ—Ä–∏—Ç—å —Ä–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã.
5. –û—Ç–Ω–æ—Å–∏—Ç–µ—Å—å –∫ –∞–≥–µ–Ω—Ç—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —Å —É–≤–∞–∂–µ–Ω–∏–µ–º. –ù–µ –≥—Ä—É–±–∏—Ç–µ –µ–º—É –∏ –Ω–µ –¥–µ—Ä–∑–∏—Ç–µ, –µ—Å–ª–∏ –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω—ã –≤ —Å–∫–æ—Ä–µ–π—à–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–∏ –í–∞—à–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞.    
"""
    return ru_text if language == "ru" else eng_text


def crypto_text(language, network, sym):
    eng_text = f"""
Payment USDT {network} <b><i>{sym}</b></i>\n
To fund USDT {network} from an external wallet, use the reusable address below. \n
üí± USDT {network} address: {usdt_network[network]}\n
After replenishing funds, confirm the replenishment by clicking the button below.\n
‚ö†Ô∏è Funds must be sent to the address in the exact amount you specified in the deposit: <b><i>{sym}</b></i>
"""
    ru_text = f"""
–û–ø–ª–∞—Ç–∞ USDT {network} <b><i>{sym}</b></i>\n
–î–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è USDT {network} —Å –≤–Ω–µ—à–Ω–µ–≥–æ –∫–æ—à–µ–ª—å–∫–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–Ω–æ–≥–æ—Ä–∞–∑–æ–≤—ã–π –∞–¥—Ä–µ—Å –Ω–∏–∂–µ. \n
üí± –ê–¥—Ä–µ—Å USDT {network}: {usdt_network[network]}\n
–ü–æ—Å–ª–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è —Å—Ä–µ–¥—Å—Ç–≤, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.\n
‚ö†Ô∏è –°—Ä–µ–¥—Å—Ç–≤–∞ –Ω–∞ –∞–¥—Ä–µ—Å –¥–æ–ª–∂–Ω—ã –ø–æ—Å—Ç—É–ø–∏—Ç—å —Ç–æ—á–Ω–æ–π —Å—É–º–º–µ –∫–æ—Ç–æ—Ä—É—é –í—ã —É–∫–∞–∑–∞–ª–∏ –≤ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏: <b><i>{sym}</b></i>
"""
    return ru_text if language == "ru" else eng_text


def crypto_replenishment_confirm_text(language, sym, network):
    eng_text = f"""
üì• Top up your balance <b>({sym} USDT)</b>\n
üí∏ Deposit method: <b>Cryptocurrency</b>
üåê Recharge network: <b>{network}</b>
üí≤ Deposit amount: <b>{sym} USDT</b>\n
<i>Confirm that the data for replenishment is correct.</i>
"""
    ru_text = f"""
üì• –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ <b>({sym} USDT)</b>\n
üí∏ –ú–µ—Ç–æ–¥ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è: <b>–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞</b>
üåê –°–µ—Ç—å –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è: <b>{network}</b>
üí≤ –°—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è: <b>{sym} USDT</b>\n
<i>–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —É–∫–∞–∑–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è.</i>
"""
    return ru_text if language == "ru" else eng_text


def card_replenishment_confirm_text(language, sym, currency, sign):
    eng_text = f"""
üì• Top up your balance <b>({sym}{sign})</b>\n
üí∏ Deposit method: <b>Bank card</b>
üí≤ Deposit amount: <b>{sym} {currency.upper()}</b>\n
<i>Confirm that the data for replenishment is correct.</i>
"""
    ru_text = f"""
üì• –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ <b>({sym}{sign})</b>\n
üí∏ –ú–µ—Ç–æ–¥ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è: <b>–ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞</b>
üí≤ –°—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è: <b>{sym} {currency.upper()}</b>\n
<i>–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —É–∫–∞–∑–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è.</i>
"""
    return ru_text if language == "ru" else eng_text


def crypto_confirm_text(language, sym, network):
    eng_text = f"""
üì• Top up your balance \\(*{sym} USDT*\\)\n
üåê Recharge network: *{network}*
üí± Address for replenishment: `{usdt_network[network]}`\n
_After replenishment, the funds will be credited within 15\\-20 minutes\\. If you encounter any problems\\, contact technical support\\._
"""
    ru_text = f"""
üì• –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ \\(*{sym} USDT*\\)\n
üåê –°–µ—Ç—å –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è: *{network}*
üí± –ê–¥—Ä–µ—Å –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è: `{usdt_network[network]}`\n
_–ü–æ—Å–ª–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –≤ —Ç–µ—á–µ–Ω–∏–∏ 15\\-20 –º–∏–Ω—É—Ç —Å—Ä–µ–¥—Å—Ç–≤–∞ –±—É–¥—É—Ç –∑–∞—á–∏—Å–ª–µ–Ω—ã\\. –ü—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –∫–∞–∫–∏—Ö –ª–∏–±–æ –ø—Ä–æ–±–ª–µ–º\\, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö –ø–æ–¥–¥–µ—Ä–∂–∫—É\\._
"""
    return ru_text if language == "ru" else eng_text


def card_confirm_text(language, sym, currency, sign):
    card = CARD.get_card_number()
    eng_text = f"""
üì• Top up your balance *\\({sym}{sign}\\)*\n
üí≥ Card for replenishment: `{card}`
üí≤ Deposit amount: *{sym} {currency.upper()}*\n
_After replenishment\\, the funds will be credited within 15\\-20 minutes\\. If you encounter any problems\\, contact technical support\\._
"""
    ru_text = f"""
üì• –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ *\\({sym}{sign}\\)*\n
üí≥ –ö–∞—Ä—Ç–∞ –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è: `{card}`
üí≤ –°—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è: *{sym} {currency.upper()}*\n
_–ü–æ—Å–ª–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –≤ —Ç–µ—á–µ–Ω–∏–∏ 15\\-20 –º–∏–Ω—É—Ç —Å—Ä–µ–¥—Å—Ç–≤–∞ –±—É–¥—É—Ç –∑–∞—á–∏—Å–ª–µ–Ω—ã\\. –ü—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –∫–∞–∫–∏—Ö –ª–∏–±–æ –ø—Ä–æ–±–ª–µ–º\\, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö –ø–æ–¥–¥–µ—Ä–∂–∫—É\\._
"""
    return ru_text if language == "ru" else eng_text


def coin_text(language, coin):
    eng_text = f"""
üî∂ Coin: <b>{coin}/USD</b>\n
üí∏ Price: <b><i>{parsing_coin_price(coin)}</i></b>\n
<i>Select actions below‚¨áÔ∏è</i>
"""
    ru_text = f"""
üî∂ –ú–æ–Ω–µ—Ç–∞: <b>{coin}/USD</b>\n
üí∏ –°—Ç–æ–∏–º–æ—Å—Ç—å: <b><i>{parsing_coin_price(coin)}</i></b>\n
<i>–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏—è –Ω–∏–∂–µ‚¨áÔ∏è</i>
"""
    return ru_text if language == "ru" else eng_text


def bet_amount_text(language, coin, balance):
    eng_text = f"""
üî∂ <b>{coin}/USD</b>
üí∏ Your balance: <b>{balance} USD</b>\n
<i>Select or enter pool amount:</i>
"""
    ru_text = f"""
üî∂ <b>{coin}/USD</b>
üí∏ –í–∞—à –±–∞–ª–∞–Ω—Å: <b>{balance} USD</b>\n
<i>–í—ã–±–µ—Ä–∏—Ç–µ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –ø—É–ª–∞:</i>
"""
    return ru_text if language == "ru" else eng_text


def confirming_option_text(language, coin, actions, value, time):
    action_ru = "‚¨ÜÔ∏è –ü–æ–≤—ã—à–µ–Ω–∏—è" if actions == "rise_coin" else "‚¨áÔ∏è –ü–æ–Ω–∏–∂–µ–Ω–∏—è"
    action_eng = "‚¨ÜÔ∏è Rise" if actions == "rise_coin" else "‚¨áÔ∏è Reduction"
    action_emoji = "üìà" if actions == "rise_coin" else "üìâ"

    eng_text = f"""
üî∂ <b>{coin}/USD</b>\n
{action_emoji} Your forecast: <b>{action_eng}</b>
üí∏ Initial coin price {coin}: <b>{parsing_coin_price(coin)}</b>
üí≤ Bet amount: <b>{value} USD</b>
‚è≥ Bet time: <b>{time_exchanger[time]} sec.</b>
"""
    ru_text = f"""
üî∂ <b>{coin}/USD</b>\n
{action_emoji} –í–∞—à –ø—Ä–æ–≥–Ω–æ–∑: <b>{action_ru}</b>
üí∏ –ù–∞—á–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –º–æ–Ω–µ—Ç—ã {coin}: <b>{parsing_coin_price(coin)}</b>
üí≤ –°—É–º–º–∞ —Å—Ç–∞–≤–∫–∏: <b>{value} USD</b>
‚è≥ –í—Ä–µ–º—è —Å—Ç–∞–≤–∫–∏: <b>{time_exchanger[time]} —Å–µ–∫.</b> 
"""
    return ru_text if language == "ru" else eng_text


def confirmed_text(language, coin, sym_pool, start_time, time, actions, starting_price, price_now):
    action_ru = "‚¨ÜÔ∏è –ü–æ–≤—ã—à–µ–Ω–∏—è" if actions == "rise_coin" else "‚¨áÔ∏è –ü–æ–Ω–∏–∂–µ–Ω–∏—è"
    action_eng = "‚¨ÜÔ∏è Rise" if actions == "rise_coin" else "‚¨áÔ∏è Reduction"

    eng_text = f"""
<b>{action_eng}</b>\n
üí± Value: <b>{coin}/USD</b>\n
üí∞ Sym pool: <b>{sym_pool} USD</b>\n
üí∏ Start price: <b>{starting_price}</b>
üíµ Price now: <b>${price_now}</b>\n
‚è∞ Time: <b>{start_time}/{time} Second</b>
"""
    ru_text = f"""
<b>{action_ru}</b>\n
üí± –í–∞–ª—é—Ç–∞: <b>{coin}/USD</b>\n
üí∞ –°—É–º–º–∞ –ø—É–ª–∞: <b>{sym_pool} USD</b>\n
üí∏ –ù–∞—á–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞: <b>{starting_price}</b>
üíµ –¶–µ–Ω–∞ —Å–µ–π—á–∞—Å: <b>${price_now}</b>\n
‚è∞ –í—Ä–µ–º—è: <b>{start_time}/{time} –°–µ–∫—É–Ω–¥</b>
"""
    return ru_text if language == "ru" else eng_text


def result_pool_text(language, time, actions, balance, sym_pool, result):
    emoji_action = "‚¨ÜÔ∏è" if actions == "rise_coin" else "‚¨áÔ∏è"
    emoji_result = "‚úÖ" if result else "‚ùå"

    if result:
        res_price_text_ru = "–ø–æ–¥–Ω—è–ª–∞—Å—å" if actions == "rise_coin" else "—É–ø–∞–ª–∞"
        res_price_text_eng = "went up" if actions == "rise_coin" else "fell"
    else:
        res_price_text_ru = "—É–ø–∞–ª–∞" if actions == "rise_coin" else "–ø–æ–¥–Ω—è–ª–∞—Å—å"
        res_price_text_eng = "fell" if actions == "rise_coin" else "went up"

    res_text_ru = "—É–¥–∞—á–Ω—ã–π" if result else "–Ω–µ —É–¥–∞—á–Ω—ã–π"
    res_text_eng = "lucky" if result else "not lucky"
    operation = "+" if result else "-"
    sym_pool = (sym_pool * 0.9) if result else sym_pool

    eng_text = f"""
<b>{emoji_action} In {time} Second the price {res_price_text_eng}!</b>\n
{emoji_result} Your pool is {res_text_eng}, <b>{operation}{sym_pool} USD</b>
üí∏ Balance: <b>{balance} USD</b>
"""
    ru_text = f"""
<b>{emoji_action} –ó–∞ {time} –°–µ–∫—É–Ω–¥ —Ü–µ–Ω–∞ {res_price_text_ru}!</b>\n
{emoji_result} –í–∞—à –ø—É–ª {res_text_ru}, <b>{operation}{sym_pool} USD</b>
üí∏ –ë–∞–ª–∞–Ω—Å: <b>{balance} USD</b>
"""
    return ru_text if language == "ru" else eng_text


def not_verified_text(language):
    eng_text = f"""
ü§∑üèª‚Äç‚ôÄÔ∏è Unfortunately, your account is not verified at the moment. We recommend that you verify your account. You can do this by clicking on the button below and writing "<i>Verification</i>" in the tech. support.\n
Verified accounts have a number of advantages over regular ones. Among them:\n
üî∑ Priority in the payout queue.\n
üî∑ No withdrawal limits.\n
üî∑ Possibility to store funds on the personal account account in different assets.\n
üî∑ Increased trust on the part of the administration and technical support agents; minimal chance of blocking an account due to suspicious activity.
"""
    ru_text = f"""
ü§∑üèª‚Äç‚ôÄÔ∏è –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –í–∞–º –ø—Ä–æ–π—Ç–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é –∞–∫–∫–∞—É–Ω—Ç–∞. –í—ã –º–æ–∂–µ—Ç–µ —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏ –Ω–∞–ø–∏—Å–∞–≤ "<i>–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è</i>" –≤ —Ç–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫—É.\n
–í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã –æ–±–ª–∞–¥–∞—é—Ç —Ä—è–¥–æ–º –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤ –Ω–∞–¥ –æ–±—ã—á–Ω—ã–º–∏. –°—Ä–µ–¥–∏ –Ω–∏—Ö:\n
üî∑ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –≤ –æ—á–µ—Ä–µ–¥–∏ –Ω–∞ –≤—ã–ø–ª–∞—Ç—É.\n
üî∑ –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –ª–∏–º–∏—Ç–æ–≤ –Ω–∞ –≤—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤.\n
üî∑ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ö—Ä–∞–Ω–∏—Ç—å —Å—Ä–µ–¥—Å—Ç–≤–∞ –Ω–∞ —Å—á–µ—Ç—É –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞ –≤ —Ä–∞–∑–Ω—ã—Ö –∞–∫—Ç–∏–≤–∞—Ö.\n
üî∑ –£–≤–µ–ª–∏—á–µ–Ω–∏–µ –¥–æ–≤–µ—Ä–∏—è —Å–æ —Å—Ç–æ—Ä–æ–Ω—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏ –∞–≥–µ–Ω—Ç–æ–≤ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏; –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —à–∞–Ω—Å –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∞–∫–∫–∞—É–Ω—Ç–∞ –≤–≤–∏–¥—É –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏.
"""
    return ru_text if language == "ru" else eng_text


def withdraw_first_text(language):
    eng_text = f"""
üí≥ Enter the details to which the withdrawal will be received:\n
"""
    ru_text = f"""
üí≥ –í–≤–µ–¥–∏—Ç–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –ø–æ—Å—Ç—É–ø–∏—Ç –≤—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤:\n
"""
    return ru_text if language == "ru" else eng_text


def withdraw_ordinary_text(language):
    eng_text = f"""
‚ùå Withdrawal of funds is possible only to those details from which the balance was replenished.
"""
    ru_text = f"""
‚ùå –í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤ –≤–æ–∑–º–æ–∂–µ–Ω —Ç–æ–ª—å–∫–æ –Ω–∞ —Ç–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã, —Å –∫–æ—Ç–æ—Ä—ã—Ö –ø–æ–ø–æ–ª–Ω—è–ª—Å—è –±–∞–ª–∞–Ω—Å.
"""
    return ru_text if language == "ru" else eng_text


def withdraw_error_text(language):
    eng_text = f"""
‚ùå An error occurred while withdrawing funds.
"""
    ru_text = f"""
‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≤–æ–¥–µ —Å—Ä–µ–¥—Å—Ç–≤.
"""
    return ru_text if language == "ru" else eng_text


def withdraw_successful_text(language, sym, card, currency):
    eng_text = f"""
‚úÖ Withdrawal of funds in the amount: <b>{sym}{currency_signs[currency]}.</b>\n
<i>Details to which funds will be received: {card}</i>
"""
    ru_text = f"""
‚úÖ –í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ —Å—É–º–º—É: <b>{sym}{currency_signs[currency]}.</b>\n
<i>–†–µ–∫–≤–∏–∑–∏—Ç—ã –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –ø–æ—Å—Ç—É–ø—è—Ç —Å—Ä–µ–¥—Å—Ç–≤–∞: {card}</i>
"""
    return ru_text if language == "ru" else eng_text

